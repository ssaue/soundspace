// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "watchdog_ocx.h"

/////////////////////////////////////////////////////////////////////////////
// CWatchDog_OCX

IMPLEMENT_DYNCREATE(CWatchDog_OCX, CWnd)

/////////////////////////////////////////////////////////////////////////////
// CWatchDog_OCX properties

/////////////////////////////////////////////////////////////////////////////
// CWatchDog_OCX operations

long CWatchDog_OCX::Disable()
{
	long result;
	InvokeHelper(0x1, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CWatchDog_OCX::EnableorLoad()
{
	long result;
	InvokeHelper(0x2, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CWatchDog_OCX::SetTimeUnit(long TimeUnit)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x3, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		TimeUnit);
	return result;
}

long CWatchDog_OCX::SetCounter(long Counter)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x4, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		Counter);
	return result;
}

long CWatchDog_OCX::PowerON()
{
	long result;
	InvokeHelper(0x5, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CWatchDog_OCX::PowerOFF()
{
	long result;
	InvokeHelper(0x6, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CWatchDog_OCX::EnablePCIReset(BOOL Status)
{
	long result;
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x7, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		Status);
	return result;
}

long CWatchDog_OCX::GetCounter()
{
	long result;
	InvokeHelper(0x8, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

void CWatchDog_OCX::AboutBox()
{
	InvokeHelper(0xfffffdd8, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}
